name: CMake

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install Tex Live
    # Install Tex Live on runner
      run: |
        sudo apt-get update
        sudo apt-get install texlive-full

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --parallel

    - name: Install
      # Install the PDF documents in the bin directory
      run: cmake --install ${{github.workspace}}/build
      
    - name: Store artifacts
      # Store the PDF documents for download
      uses: actions/upload-artifact@v2
      with:
        name: pdf
        path: bin

    - name: Upload release assets
      # Create a new release on tag push
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          bin/marcon_julian_us.pdf
          bin/marcon_julian_eu.pdf
          bin/marcon_julian_academic.pdf
